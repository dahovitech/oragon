{% extends 'base.html.twig' %}

{% block title %}Gestion des Notifications{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .notification-card {
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            padding: 1.5rem;
            margin-bottom: 1.5rem;
        }
        
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin-bottom: 2rem;
        }
        
        .stat-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 1.5rem;
            border-radius: 8px;
            text-align: center;
        }
        
        .stat-value {
            font-size: 2rem;
            font-weight: bold;
            margin-bottom: 0.5rem;
        }
        
        .stat-label {
            font-size: 0.9rem;
            opacity: 0.9;
        }
        
        .status-badge {
            padding: 0.25rem 0.75rem;
            border-radius: 12px;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
        }
        
        .status-pending {
            background-color: #ffc107;
            color: #000;
        }
        
        .status-sent {
            background-color: #28a745;
            color: white;
        }
        
        .status-failed {
            background-color: #dc3545;
            color: white;
        }
        
        .priority-high {
            border-left: 4px solid #dc3545;
        }
        
        .priority-urgent {
            border-left: 4px solid #fd7e14;
        }
        
        .priority-normal {
            border-left: 4px solid #6c757d;
        }
        
        .notification-item {
            border: 1px solid #e9ecef;
            border-radius: 8px;
            padding: 1rem;
            margin-bottom: 1rem;
            transition: all 0.3s ease;
        }
        
        .notification-item:hover {
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            transform: translateY(-1px);
        }
        
        .notification-meta {
            display: flex;
            gap: 1rem;
            align-items: center;
            margin-top: 0.5rem;
            font-size: 0.85rem;
            color: #6c757d;
        }
        
        .filters {
            background: #f8f9fa;
            padding: 1rem;
            border-radius: 8px;
            margin-bottom: 2rem;
        }
        
        .loading {
            text-align: center;
            padding: 2rem;
            color: #6c757d;
        }
    </style>
{% endblock %}

{% block body %}
<div class="container-fluid mt-4">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1>
                    <i class="fas fa-bell"></i>
                    Gestion des Notifications
                </h1>
                <div>
                    <a href="{{ path('admin_notifications_create') }}" class="btn btn-primary">
                        <i class="fas fa-plus"></i> Nouvelle notification
                    </a>
                    <button type="button" class="btn btn-outline-secondary" id="processPendingBtn">
                        <i class="fas fa-play"></i> Traiter en attente
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Statistics -->
    <div class="stats-grid">
        <div class="stat-card">
            <div class="stat-value">{{ stats.total }}</div>
            <div class="stat-label">Total notifications</div>
        </div>
        <div class="stat-card" style="background: linear-gradient(135deg, #28a745 0%, #20c997 100%);">
            <div class="stat-value">{{ stats.sent }}</div>
            <div class="stat-label">Envoyées</div>
        </div>
        <div class="stat-card" style="background: linear-gradient(135deg, #ffc107 0%, #fd7e14 100%);">
            <div class="stat-value">{{ stats.pending }}</div>
            <div class="stat-label">En attente</div>
        </div>
        <div class="stat-card" style="background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);">
            <div class="stat-value">{{ stats.failed }}</div>
            <div class="stat-label">Échecs</div>
        </div>
        <div class="stat-card" style="background: linear-gradient(135deg, #17a2b8 0%, #138496 100%);">
            <div class="stat-value">{{ stats.read_rate }}%</div>
            <div class="stat-label">Taux de lecture</div>
        </div>
    </div>

    <!-- Filters -->
    <div class="filters">
        <form method="GET" class="row g-3">
            <div class="col-md-3">
                <label for="status" class="form-label">Statut</label>
                <select name="status" id="status" class="form-select">
                    <option value="">Tous les statuts</option>
                    <option value="pending" {{ currentStatus == 'pending' ? 'selected' : '' }}>En attente</option>
                    <option value="sent" {{ currentStatus == 'sent' ? 'selected' : '' }}>Envoyées</option>
                    <option value="failed" {{ currentStatus == 'failed' ? 'selected' : '' }}>Échecs</option>
                </select>
            </div>
            <div class="col-md-3">
                <label for="type" class="form-label">Type</label>
                <select name="type" id="type" class="form-select">
                    <option value="">Tous les types</option>
                    <option value="welcome" {{ currentType == 'welcome' ? 'selected' : '' }}>Bienvenue</option>
                    <option value="order_confirmation" {{ currentType == 'order_confirmation' ? 'selected' : '' }}>Confirmation commande</option>
                    <option value="password_reset" {{ currentType == 'password_reset' ? 'selected' : '' }}>Réinitialisation mot de passe</option>
                    <option value="newsletter" {{ currentType == 'newsletter' ? 'selected' : '' }}>Newsletter</option>
                    <option value="system" {{ currentType == 'system' ? 'selected' : '' }}>Système</option>
                </select>
            </div>
            <div class="col-md-3">
                <label for="search" class="form-label">Recherche</label>
                <input type="text" name="search" id="search" class="form-control" placeholder="Titre ou email...">
            </div>
            <div class="col-md-3">
                <label class="form-label">&nbsp;</label>
                <div>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-search"></i> Filtrer
                    </button>
                    <a href="{{ path('admin_notifications_index') }}" class="btn btn-outline-secondary">
                        <i class="fas fa-times"></i> Reset
                    </a>
                </div>
            </div>
        </form>
    </div>

    <!-- Notifications List -->
    <div class="notification-card">
        <h5 class="mb-3">
            <i class="fas fa-list"></i>
            Notifications ({{ totalCount }} total)
        </h5>

        {% if notifications is empty %}
            <div class="text-center py-5">
                <i class="fas fa-inbox fa-3x text-muted mb-3"></i>
                <p class="text-muted">Aucune notification trouvée.</p>
                <a href="{{ path('admin_notifications_create') }}" class="btn btn-primary">
                    Créer une notification
                </a>
            </div>
        {% else %}
            {% for notification in notifications %}
                <div class="notification-item priority-{{ notification.priority }}">
                    <div class="d-flex justify-content-between align-items-start">
                        <div class="flex-grow-1">
                            <h6 class="mb-1">
                                <a href="{{ path('admin_notifications_show', {id: notification.id}) }}" class="text-decoration-none">
                                    {{ notification.title }}
                                </a>
                            </h6>
                            <p class="mb-2 text-muted">{{ notification.message|length > 100 ? notification.message|slice(0, 100) ~ '...' : notification.message }}</p>
                            <div class="notification-meta">
                                <span class="status-badge status-{{ notification.status }}">{{ notification.status }}</span>
                                <span><i class="fas fa-tag"></i> {{ notification.type }}</span>
                                {% if notification.userEmail %}
                                    <span><i class="fas fa-envelope"></i> {{ notification.userEmail }}</span>
                                {% endif %}
                                <span><i class="fas fa-clock"></i> {{ notification.createdAt|date('d/m/Y H:i') }}</span>
                                {% if notification.priority != 'normal' %}
                                    <span class="badge bg-warning">{{ notification.priority|upper }}</span>
                                {% endif %}
                            </div>
                        </div>
                        <div class="ms-3">
                            <div class="dropdown">
                                <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                    Actions
                                </button>
                                <ul class="dropdown-menu">
                                    <li>
                                        <a class="dropdown-item" href="{{ path('admin_notifications_show', {id: notification.id}) }}">
                                            <i class="fas fa-eye"></i> Voir
                                        </a>
                                    </li>
                                    {% if notification.canBeResent %}
                                        <li>
                                            <button class="dropdown-item resend-btn" data-id="{{ notification.id }}">
                                                <i class="fas fa-redo"></i> Renvoyer
                                            </button>
                                        </li>
                                    {% endif %}
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            {% endfor %}

            <!-- Pagination -->
            {% if totalPages > 1 %}
                <nav aria-label="Pagination" class="mt-4">
                    <ul class="pagination justify-content-center">
                        {% if currentPage > 1 %}
                            <li class="page-item">
                                <a class="page-link" href="{{ path('admin_notifications_index', {page: currentPage - 1, status: currentStatus, type: currentType}) }}">
                                    <i class="fas fa-chevron-left"></i>
                                </a>
                            </li>
                        {% endif %}

                        {% for page in 1..totalPages %}
                            {% if page == currentPage %}
                                <li class="page-item active">
                                    <span class="page-link">{{ page }}</span>
                                </li>
                            {% elseif page <= currentPage + 2 and page >= currentPage - 2 %}
                                <li class="page-item">
                                    <a class="page-link" href="{{ path('admin_notifications_index', {page: page, status: currentStatus, type: currentType}) }}">{{ page }}</a>
                                </li>
                            {% endif %}
                        {% endfor %}

                        {% if currentPage < totalPages %}
                            <li class="page-item">
                                <a class="page-link" href="{{ path('admin_notifications_index', {page: currentPage + 1, status: currentStatus, type: currentType}) }}">
                                    <i class="fas fa-chevron-right"></i>
                                </a>
                            </li>
                        {% endif %}
                    </ul>
                </nav>
            {% endif %}
        {% endif %}
    </div>

    <!-- Quick Actions -->
    <div class="notification-card">
        <h5 class="mb-3">
            <i class="fas fa-tools"></i>
            Actions rapides
        </h5>
        <div class="row g-3">
            <div class="col-md-4">
                <a href="{{ path('admin_notifications_templates') }}" class="btn btn-outline-primary w-100">
                    <i class="fas fa-file-alt"></i>
                    Gérer les templates
                </a>
            </div>
            <div class="col-md-4">
                <a href="{{ path('admin_notifications_preferences') }}" class="btn btn-outline-info w-100">
                    <i class="fas fa-cog"></i>
                    Préférences utilisateurs
                </a>
            </div>
            <div class="col-md-4">
                <button type="button" class="btn btn-outline-danger w-100" id="cleanupBtn">
                    <i class="fas fa-trash"></i>
                    Nettoyer anciennes
                </button>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Process pending notifications
            document.getElementById('processPendingBtn').addEventListener('click', function() {
                const btn = this;
                const originalText = btn.innerHTML;
                
                btn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Traitement...';
                btn.disabled = true;
                
                fetch('{{ path('admin_notifications_process_pending') }}', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert(`${data.processed} notifications traitées avec succès.`);
                        location.reload();
                    } else {
                        alert('Erreur: ' + data.message);
                    }
                })
                .catch(error => {
                    alert('Erreur: ' + error.message);
                })
                .finally(() => {
                    btn.innerHTML = originalText;
                    btn.disabled = false;
                });
            });

            // Resend notifications
            document.querySelectorAll('.resend-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    const notificationId = this.dataset.id;
                    
                    if (!confirm('Êtes-vous sûr de vouloir renvoyer cette notification ?')) {
                        return;
                    }
                    
                    fetch(`{{ path('admin_notifications_resend', {id: '__ID__'}) }}`.replace('__ID__', notificationId), {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            alert('Notification renvoyée avec succès.');
                            location.reload();
                        } else {
                            alert('Erreur: ' + data.message);
                        }
                    })
                    .catch(error => {
                        alert('Erreur: ' + error.message);
                    });
                });
            });

            // Cleanup old notifications
            document.getElementById('cleanupBtn').addEventListener('click', function() {
                const days = prompt('Supprimer les notifications de plus de combien de jours ?', '90');
                
                if (!days || isNaN(days)) {
                    return;
                }
                
                if (!confirm(`Êtes-vous sûr de vouloir supprimer toutes les notifications de plus de ${days} jours ?`)) {
                    return;
                }
                
                const btn = this;
                const originalText = btn.innerHTML;
                
                btn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Suppression...';
                btn.disabled = true;
                
                fetch('{{ path('admin_notifications_cleanup') }}', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: `days=${days}`
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert(`${data.deleted} notifications supprimées avec succès.`);
                        location.reload();
                    } else {
                        alert('Erreur: ' + data.message);
                    }
                })
                .catch(error => {
                    alert('Erreur: ' + error.message);
                })
                .finally(() => {
                    btn.innerHTML = originalText;
                    btn.disabled = false;
                });
            });
        });
    </script>
{% endblock %}